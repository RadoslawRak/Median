# ==========================================
#   Unity Project - A Test Framework for C
#   Copyright (c) 2007 Mike Karlesky, Mark VanderVoord, Greg Williams
#   [Released under MIT License. Please refer to license.txt for details]
# ==========================================

#We try to detect the OS we are running on, and adjust commands as needed
ifeq ($(OSTYPE),cygwin)
	CLEANUP = rm -f
	MKDIR = mkdir -p
	TARGET_EXTENSION=.out
elseifeq ($(OSTYPE),msys)
    CLEANUP = rm -f
	MKDIR = mkdir -p
	TARGET_EXTENSION=.exe
elseifeq ($(OS),Windows_NT)
	CLEANUP = del /F /Q
	MKDIR = mkdir
	TARGET_EXTENSION=.exe
else
	CLEANUP = rm -f
	MKDIR = mkdir -p
	TARGET_EXTENSION=.out
endif

UNITY_ROOT=Unity
C_COMPILER=gcc
TEST_BINARY_FOLDER = test_bin/

CFLAGS=-std=c99
CFLAGS += -Wall
CFLAGS += -Wextra
CFLAGS += -Werror #NOTE: Comment this not to halt compilation on an unused variable
CFLAGS += -Wpointer-arith
CFLAGS += -Wcast-align
CFLAGS += -Wwrite-strings
CFLAGS += -Wswitch-default
CFLAGS += -Wunreachable-code
CFLAGS += -Winit-self
CFLAGS += -Wmissing-field-initializers
CFLAGS += -Wno-unknown-pragmas
CFLAGS += -Wstrict-prototypes
CFLAGS += -Wundef
CFLAGS += -Wold-style-definition

TARGET_BASE1=Median
TARGET_BASE2=BPM
TARGET1 = $(TEST_BINARY_FOLDER)$(TARGET_BASE1)$(TARGET_EXTENSION)
TARGET2 = $(TEST_BINARY_FOLDER)$(TARGET_BASE2)$(TARGET_EXTENSION)
SRC_FILES1=$(UNITY_ROOT)/src/unity.c src/Median.c  test/TestMedian.c  test/test_runners/TestMedian_Runner.c
SRC_FILES2=$(UNITY_ROOT)/src/unity.c src/BPM.c src/Median.c test/TestBPM.c  test/test_runners/TestBPM_Runner.c #NOTE: Need to manually include all referenced files!
INC_DIRS=-Isrc -I$(UNITY_ROOT)/src
SYMBOLS=-DTEST

all: clean default

default:
	clear
	ruby $(UNITY_ROOT)/auto/generate_test_runner.rb test/TestMedian.c  test/test_runners/TestMedian_Runner.c
	ruby $(UNITY_ROOT)/auto/generate_test_runner.rb test/TestBPM.c  test/test_runners/TestBPM_Runner.c
	$(C_COMPILER) $(CFLAGS) $(INC_DIRS) $(SYMBOLS) $(SRC_FILES1) -o $(TARGET1)
	$(C_COMPILER) $(CFLAGS) $(INC_DIRS) $(SYMBOLS) $(SRC_FILES2) -o $(TARGET2)
	clear
	./$(TARGET1) | grep --color=always -E "^|PASS|FAIL|IGNORE|OK|\s[-]*[0-9]\s|^[-]*[0-9]\s|\s[-]*[0-9]$$"
	./$(TARGET2) | grep --color=always -E "^|PASS|FAIL|IGNORE|OK|\s[-]*[0-9]\s|^[-]*[0-9]\s|\s[-]*[0-9]$$"
clean:
	$(CLEANUP)

